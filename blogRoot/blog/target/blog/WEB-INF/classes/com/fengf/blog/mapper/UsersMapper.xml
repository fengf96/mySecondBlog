<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fengf.blog.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.fengf.blog.pojo.Users" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="profession" property="profession" jdbcType="VARCHAR" />
    <result column="gold" property="gold" jdbcType="INTEGER" />
    <result column="joinday" property="joinday" jdbcType="DATE" />
    <result column="attention" property="attention" jdbcType="INTEGER" />
    <result column="fans" property="fans" jdbcType="INTEGER" />
    <result column="moodcount" property="moodcount" jdbcType="INTEGER" />
    <result column="articlecount" property="articlecount" jdbcType="INTEGER" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, user_password, email, phone, birthday, sex, profession, gold, 
    joinday, attention, fans, moodcount, articlecount, introduction
  </sql>
  <select id="selectHotUsers" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT * FROM users ORDER BY fans DESC LIMIT #{i}
	</select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fengf.blog.pojo.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
	<select id="userCountByQueryVo" parameterType="UserQueryVo" resultType="Integer">
		select count(1) from users
		<where>
			<if test="userName!=null and userName!=''">
				user_name like "%"#{userName}"%"
			</if>
		</where>
	</select>
	<select id="attentionCountByQueryVo" parameterType="UserQueryVo" resultType="Integer">
		 SELECT COUNT(1) FROM  users INNER JOIN attention ON users.user_id=attention.attuser_id 
		 WHERE 
		 <if test="userName!=null and userName!=''">
				user_name like "%"#{userName}"%" and
		</if>
		 attention.user_id =  #{userId}
	</select>
	<select id="selectAttentionListByQueryVo" parameterType="UserQueryVo" resultMap="BaseResultMap">
		SELECT users.* FROM  users INNER JOIN attention ON users.user_id=attention.attuser_id 
		WHERE 
		<if test="userName!=null and userName!=''">
				user_name like "%"#{userName}"%" and
		</if>
		attention.user_id = #{userId}
		order by articlecount desc
		limit #{startRow},#{size}
	</select>
	<select id="fansCountByQueryVo" parameterType="UserQueryVo" resultType="Integer">
		SELECT COUNT(1) FROM  users INNER JOIN attention ON attention.user_id=users.user_id
		 WHERE
			<if test="userName!=null and userName!=''">
				user_name like "%"#{userName}"%" and
			</if>
		 attention.attuser_id = #{userId}
	</select>
	<select id="selectFansListByQueryVo" parameterType="UserQueryVo" resultMap="BaseResultMap">
		SELECT users.* FROM  users INNER JOIN attention ON attention.user_id=users.user_id
		 WHERE
			<if test="userName!=null and userName!=''">
				user_name like "%"#{userName}"%" and
			</if>
		attention.attuser_id = #{userId}
		order by articlecount desc
		limit #{startRow},#{size}
	</select>
  	<select id="selectUserListByQueryVo" parameterType="UserQueryVo" resultMap="BaseResultMap">
		select * from users
		<where>
			<if test="userName!=null and userName!=''">
				user_name like "%"#{userName}"%"
			</if>
		</where>
		order by articlecount desc
		limit #{startRow},#{size}
	</select>
  <select id="selectByusername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_name = #{userName}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fengf.blog.pojo.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fengf.blog.pojo.Users" >
    insert into users (user_id, user_name, user_password, 
      email, phone, birthday, 
      sex, profession, gold, 
      joinday, attention, fans, 
      moodcount, articlecount, introduction
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, #{gold,jdbcType=INTEGER}, 
      #{joinday,jdbcType=DATE}, #{attention,jdbcType=INTEGER}, #{fans,jdbcType=INTEGER}, 
      #{moodcount,jdbcType=INTEGER}, #{articlecount,jdbcType=INTEGER}, #{introduction,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fengf.blog.pojo.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="profession != null" >
        profession,
      </if>
      <if test="gold != null" >
        gold,
      </if>
      <if test="joinday != null" >
        joinday,
      </if>
      <if test="attention != null" >
        attention,
      </if>
      <if test="fans != null" >
        fans,
      </if>
      <if test="moodcount != null" >
        moodcount,
      </if>
      <if test="articlecount != null" >
        articlecount,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="profession != null" >
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="gold != null" >
        #{gold,jdbcType=INTEGER},
      </if>
      <if test="joinday != null" >
        #{joinday,jdbcType=DATE},
      </if>
      <if test="attention != null" >
        #{attention,jdbcType=INTEGER},
      </if>
      <if test="fans != null" >
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="moodcount != null" >
        #{moodcount,jdbcType=INTEGER},
      </if>
      <if test="articlecount != null" >
        #{articlecount,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fengf.blog.pojo.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null" >
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.profession != null" >
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.gold != null" >
        gold = #{record.gold,jdbcType=INTEGER},
      </if>
      <if test="record.joinday != null" >
        joinday = #{record.joinday,jdbcType=DATE},
      </if>
      <if test="record.attention != null" >
        attention = #{record.attention,jdbcType=INTEGER},
      </if>
      <if test="record.fans != null" >
        fans = #{record.fans,jdbcType=INTEGER},
      </if>
      <if test="record.moodcount != null" >
        moodcount = #{record.moodcount,jdbcType=INTEGER},
      </if>
      <if test="record.articlecount != null" >
        articlecount = #{record.articlecount,jdbcType=INTEGER},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      sex = #{record.sex,jdbcType=VARCHAR},
      profession = #{record.profession,jdbcType=VARCHAR},
      gold = #{record.gold,jdbcType=INTEGER},
      joinday = #{record.joinday,jdbcType=DATE},
      attention = #{record.attention,jdbcType=INTEGER},
      fans = #{record.fans,jdbcType=INTEGER},
      moodcount = #{record.moodcount,jdbcType=INTEGER},
      articlecount = #{record.articlecount,jdbcType=INTEGER},
      introduction = #{record.introduction,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fengf.blog.pojo.Users" >
    update users
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="profession != null" >
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="gold != null" >
        gold = #{gold,jdbcType=INTEGER},
      </if>
      <if test="attention != null" >
        attention = #{attention,jdbcType=INTEGER},
      </if>
      <if test="fans != null" >
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="moodcount != null" >
        moodcount = #{moodcount,jdbcType=INTEGER},
      </if>
      <if test="articlecount != null" >
        articlecount = #{articlecount,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
   <update id="addUserMood" parameterType="java.lang.String" >
    update users
    set  moodcount = moodcount+1
    where user_name = #{moodAuthor,jdbcType=VARCHAR}
  </update>
    <update id="addUserArticleCount" parameterType="java.lang.Integer" >
    update users
    set  articlecount = articlecount+1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="deleteUserArticleCount" parameterType="java.lang.Integer" >
    update users
    set  articlecount = articlecount-1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="addUserAttentionByUserId" parameterType="java.lang.Integer" >
    update users
    set  attention = attention+1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="deleteUserAttentionByUserId" parameterType="java.lang.Integer" >
    update users
    set  attention = attention-1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="addUserFansByUserId" parameterType="java.lang.Integer" >
    update users
    set  fans = fans+1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="deleteUserFansByUserId" parameterType="java.lang.Integer" >
    update users
    set  fans = fans-1
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fengf.blog.pojo.Users" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      gold = #{gold,jdbcType=INTEGER},
      attention = #{attention,jdbcType=INTEGER},
      fans = #{fans,jdbcType=INTEGER},
      moodcount = #{moodcount,jdbcType=INTEGER},
      articlecount = #{articlecount,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>